import ResultPage from "./ResultPage";
import {useState} from "react";

const EditPage = () => {

  const [words, setWords] = useState<string[]>(Array(70).fill(""));
  const [max_n, setMax_n] = useState<number>(60);

  const setIndexedWord = (index: number, word: string) => {
    setWords(prev => {
      return prev.map((w, i) => (i === index ? word : w))
    });
  }

  const shuffleWords = (words) => {
    const shuffled = [...words]; // 원본 보호
    for (let i = shuffled.length - 1; i > 0; i--) {
      const j = Math.floor(Math.random() * (i + 1));
      [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];
    }
    const filteredShuffled = shuffled.filter((w) => w !== '');
    const filledShuffled = filteredShuffled.concat(Array(max_n - filteredShuffled.length).fill(""));
    setWords(filledShuffled);
  };

  return <div>
    <div style={{
      display: "flex",
      justifyContent: "space-between"
    }}>
      <button onClick={() => setMax_n(max_n === 60 ? 70 : 60)} style={{
        fontWeight: 'bold'
      }}>단어 {max_n}개</button>
      <div style={{
        display: "flex",
        gap: 10
      }}>
        <button onClick={() => shuffleWords(words)}>
          <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path fill-rule="evenodd" clip-rule="evenodd" d="M12 5.25C10.7869 5.25 9.58465 5.2957 8.39481 5.38545C6.78038 5.50723 5.50723 6.78038 5.38545 8.39481C5.34144 8.97827 5.30802 9.56471 5.28539 10.1539L6.96967 8.46967C7.26256 8.17678 7.73744 8.17678 8.03033 8.46967C8.32322 8.76256 8.32322 9.23744 8.03033 9.53033L5.03033 12.5303C4.73744 12.8232 4.26256 12.8232 3.96967 12.5303L0.96967 9.53033C0.676777 9.23744 0.676777 8.76256 0.96967 8.46967C1.26256 8.17678 1.73744 8.17678 2.03033 8.46967L3.78186 10.2212C3.80517 9.57151 3.84119 8.92503 3.8897 8.28199C4.06725 5.92812 5.92812 4.06725 8.28199 3.8897C9.50933 3.79712 10.7492 3.75 12 3.75C13.2508 3.75 14.4907 3.79712 15.718 3.8897C18.0719 4.06725 19.9327 5.92812 20.1103 8.28199C20.1272 8.50552 20.1425 8.72948 20.1564 8.95384C20.1818 9.36727 19.8674 9.72308 19.4539 9.74858C19.0405 9.77407 18.6847 9.45959 18.6592 9.04616C18.6458 8.82864 18.6309 8.61152 18.6146 8.39481C18.4928 6.78038 17.2196 5.50723 15.6052 5.38545C14.4153 5.2957 13.2131 5.25 12 5.25ZM18.9697 11.4697C19.2626 11.1768 19.7374 11.1768 20.0303 11.4697L23.0303 14.4697C23.3232 14.7626 23.3232 15.2374 23.0303 15.5303C22.7374 15.8232 22.2626 15.8232 21.9697 15.5303L20.2181 13.7788C20.1948 14.4285 20.1588 15.075 20.1103 15.718C19.9327 18.0719 18.0719 19.9327 15.718 20.1103C14.4907 20.2029 13.2508 20.25 12 20.25C10.7492 20.25 9.50933 20.2029 8.28199 20.1103C5.92812 19.9327 4.06725 18.0719 3.8897 15.718C3.87284 15.4945 3.85748 15.2705 3.84365 15.0462C3.81815 14.6327 4.13264 14.2769 4.54606 14.2514C4.95949 14.2259 5.31531 14.5404 5.3408 14.9538C5.35422 15.1714 5.3691 15.3885 5.38545 15.6052C5.50723 17.2196 6.78038 18.4928 8.39481 18.6146C9.58465 18.7043 10.7869 18.75 12 18.75C13.2131 18.75 14.4153 18.7043 15.6052 18.6146C17.2196 18.4928 18.4928 17.2196 18.6146 15.6052C18.6586 15.0217 18.692 14.4353 18.7146 13.8461L17.0303 15.5303C16.7374 15.8232 16.2626 15.8232 15.9697 15.5303C15.6768 15.2374 15.6768 14.7626 15.9697 14.4697L18.9697 11.4697Z" fill="#0F172A"/>
          </svg>
        </button>
        <button onClick={() => {
          window.print();
        }}>
          <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path fill-rule="evenodd" clip-rule="evenodd" d="M7.875 1.5C6.83947 1.5 6 2.33947 6 3.375V6.36564C5.5736 6.41799 5.1489 6.47583 4.72596 6.53912C3.27191 6.75668 2.25 8.02163 2.25 9.45569V15.75C2.25 17.4069 3.59315 18.75 5.25 18.75H5.51963L5.36461 20.4552C5.26479 21.5533 6.12935 22.5 7.23191 22.5H16.7681C17.8706 22.5 18.7352 21.5533 18.6354 20.4552L18.4804 18.75H18.75C20.4069 18.75 21.75 17.4069 21.75 15.75V9.45569C21.75 8.02163 20.7281 6.75668 19.274 6.53912C18.8511 6.47583 18.4264 6.41799 18 6.36564V3.375C18 2.33947 17.1605 1.5 16.125 1.5H7.875ZM16.5 6.20498V3.375C16.5 3.16789 16.3321 3 16.125 3H7.875C7.66789 3 7.5 3.16789 7.5 3.375V6.20498C8.98198 6.06931 10.483 6 12 6C13.517 6 15.018 6.06931 16.5 6.20498ZM16.2834 14.4696C16.4607 14.4879 16.5996 14.6298 16.6158 14.8073L17.1415 20.591C17.1615 20.8107 16.9886 21 16.7681 21H7.23191C7.0114 21 6.83849 20.8107 6.85845 20.591L7.38425 14.8073C7.40039 14.6298 7.53926 14.4879 7.71659 14.4696C9.12438 14.3244 10.5534 14.25 12 14.25C13.4466 14.25 14.8756 14.3244 16.2834 14.4696ZM17.25 10.5C17.25 10.0858 17.5858 9.75 18 9.75H18.0075C18.4217 9.75 18.7575 10.0858 18.7575 10.5V10.5075C18.7575 10.9217 18.4217 11.2575 18.0075 11.2575H18C17.5858 11.2575 17.25 10.9217 17.25 10.5075V10.5ZM15 9.75C14.5858 9.75 14.25 10.0858 14.25 10.5V10.5075C14.25 10.9217 14.5858 11.2575 15 11.2575H15.0075C15.4217 11.2575 15.7575 10.9217 15.7575 10.5075V10.5C15.7575 10.0858 15.4217 9.75 15.0075 9.75H15Z" fill="#0F172A"/>
          </svg>
        </button>
      </div>

    </div>
    <ResultPage words={words} setIndexedWord={setIndexedWord} max_n={max_n} />
  </div>
}

export default EditPage;